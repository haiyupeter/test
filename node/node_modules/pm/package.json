{
  "name": "pm",
  "version": "2.1.1",
  "author": {
    "name": "Aleafs Zhang",
    "url": "zhangxc83@gmail.com"
  },
  "contributors": [
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com",
      "url": "http://fengmk2.github.com"
    }
  ],
  "homepage": "https://github.com/aleafs/pm",
  "repository": {
    "type": "git",
    "url": "git://github.com/aleafs/pm.git"
  },
  "description": "Process Manager for Node.js, branched from node-cluster.",
  "keywords": [
    "process manager",
    "cluster",
    "child-process",
    "master-worker"
  ],
  "dependencies": {},
  "engines": {
    "node": ">=0.6.9"
  },
  "devDependencies": {
    "should": ">=0.4.2",
    "mocha": ">=0.9.0",
    "rewire": "*",
    "visionmedia-jscoverage": ">=1.0.0"
  },
  "main": "./index.js",
  "scripts": {
    "test": "make test"
  },
  "readme": "[![Build Status](https://secure.travis-ci.org/aleafs/pm.png?branch=master)](http://travis-ci.org/aleafs/pm)\n\njscoverage: [**100%**](http://aleafs.github.com/coverage/pm2.html)\n\n## About\n\n`pm` 是一个轻量级的Node.js多进程管理器，基于之前的`node-cluster`重构而来，在淘宝内部的生产系统中得到了广泛的应用.\n\n* 基于 master + worker 模式，master负责进程管理，worker 处理业务逻辑，有效利用现代服务器的多CPU;\n* 同一 master 可管理多种类型的worker, 并且支持在不同类型的 worker 之间进行轻量的消息传递;\n* 同一类型的 worker ，对于TCP请求，采用抢占式的方式进行负载均衡；\n* 平滑退出和 不退出前提下的 worker 进程重载 (reload).\n\n## Api\n\n* Visit the [wiki page](https://github.com/aleafs/pm/wiki) to get more infomation about `pm`.\n* Also, we supply demo scripts in the code directory [demo](demo).\n\n## Install\n\n```bash\n$ npm install pm\n```\n\n## Benchmark\n\n```bash\n\n$ siege -b -c100 -t 60S http://172.0.0.2:33749/\n```\n\n* QPS (only one child, http server, response req.url) (node0.6.17):\n\n<table>\n  <tr>\n    <th>CASE</th><th>Closed</th><th>KeepAlive</th>\n  </tr>\n  <tr>\n    <td>pm2.0</td><td>5600</td><td>10553</td>\n  </tr>\n  <tr>\n    <td>pm1.0</td><td>5231</td><td>10388</td>\n  </tr>\n  <tr>\n    <td>node</td><td>5481</td><td>10126</td>\n  </tr>\n</table>\n\n## Usage\n\n* in `master.js`, run as master:\n\n```javascript\nvar app = require('pm').createMaster({\n 'pidfile' : '/tmp/demo.pid',\n});\n\napp.register('group1', __dirname + '/http.js', {\n 'listen' : [8080, 8081]\n});\n\napp.on('giveup', function (name, num, pause) {\n  // YOU SHOULD ALERT HERE!\n});\napp.dispatch();\n\n```\n\n* in `http.js`, run as worker:\n\n```javascript\nvar http = require('http').createServer(function (req, res) {\n res.end('hello world');\n});\n\nrequire('pm').createWorker().ready(function (socket, port) {\n http.emit('connection', socket);\n});\n```\n\n## Contributors\n\nThanks goes to the people who have contributed code to this module, see the [GitHub Contributors page](https://github.com/aleafs/pm/graphs/contributors).\n\nBelow is the output from `git-summary`\n\n```\n project: pm\n commits: 78\n files  : 23\n authors: \n   78\taleafs                  100.0%\n\n```\n\n## License\n\n`pm` is published under MIT license.\nSee license text in [LICENSE](https://github.com/aleafs/pm/blob/master/LICENSE) file.\n\n",
  "_id": "pm@2.1.1",
  "_from": "pm"
}
